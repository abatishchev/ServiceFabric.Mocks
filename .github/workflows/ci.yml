name: .NET CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      Solution_Name: ServiceFabric.Mocks.sln
      Test_Project_Path: \test\ServiceFabric.Mocks.NetCoreTests\ServiceFabric.Mocks.NetCoreTests.csproj
      Wap_Project_Path: \src\ServiceFabric.Mocks\ServiceFabric.Mocks.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Create SNK 
    - name: Create SNK
      shell: pwsh
      run: |
        [string] $pfxFilePath = ".\src\ServiceFabric.Mocks\ServiceFabric.Mocks.pfx"
        [string] $snkFilePath = [IO.Path]::GetFileNameWithoutExtension($pfxFilePath) + ".snk";
        [byte[]] $certificateContent = Get-Content $pfxFilePath -AsByteStream;
        $exportable = [Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable
        $certificate = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2($certificateContent, "${{ secrets.Pfx_Key }}", $exportable)
        $certificateContent = ([Security.Cryptography.RSACryptoServiceProvider]$certificate.PrivateKey).ExportCspBlob($true)
        [IO.File]::WriteAllBytes([IO.Path]::Combine([IO.Path]::GetDirectoryName($pfxFilePath), $snkFilePath), $certificateContent)

    # Run dotnet build
    - name: Run build
      run: dotnet build --configuration $env:Configuration
      
    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test


